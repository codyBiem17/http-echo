name: Pipeline to Deploy Go App to K8S cluster

on:
  push:
    branches:
      - codybiem-feature-branch

jobs:
  build:
    runs-on: ubuntu-latest
     
    steps:
      - name: Checkout code github repo
        uses: actions/checkout@v3

      - name: Set up docker to build image
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io

      - name: Build a docker image using a Makefile
        run: make docker

      - name: Tag and Push Docker Image from local to Public Registry
        run: |
          docker tag http-echo:local ${{ secrets.DOCKER_USERNAME }}/helm-goapp-isw:v1
          docker push ${{ secrets.DOCKER_USERNAME }}/helm-goapp-isw:v1
    
          #run-name: "Pipeline to Build and Deploy app to K8S created by ${{ github.actor }}"

      - name: Install and start Minikube cluster
        run: |
              curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              sudo install minikube-linux-amd64 /usr/local/bin/minikube
              minikube start --driver=docker
              minikube status

      - name: Install Helm chart
        run: |
          # helm version command to check iif helm is installed otherwise install it
          curl -fsSL -o helm-v3.14.2-linux-amd64.tar.gz https://get.helm.sh/helm-v3.14.2-linux-amd64.tar.gz
          tar -xvf helm-v3.14.2-linux-amd64.tar.gz
          sudo mv linux-amd64 /usr/local/bin
          helm version  # Verify Helm installation

      - name: Navigate to Helm chart directory
        run: |
          cd http-echo-helm
          ls

      - name: Deploy Helm chart to K8S to create a release
        run: helm upgrade --install http-echo-goapp-release ./http-echo-helm

      - name: Confirm deployment in K8S cluster succeeds
        run: |
          kubectl get pods
          kubectl get deployments
          kubectl get services

      - name: Get service url for accessing the application
      #  id: minikube_ip
        run: minikube service list #echo "::set-output name=minikube_ip::$(minikube ip)"

      #- name: Get NodePort
      #  id: get_nodeport
      #  run: |
      #    nodeport=$(kubectl get svc http-echo -n default -o jsonpath="{.spec.ports[0].nodePort}")
      #    echo "::set-output name=nodeport::$nodeport"  

      #- name: Get service details with exposed port
      #  run: |
      #    kubectl get svc -n default
      #    nodeport="${{ steps.get_nodeport.outputs.nodeport }}"
      #    echo "Access your application at http://$minikube_ip:$nodeport
